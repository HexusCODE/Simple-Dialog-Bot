import telebot 
import pyowm #–ü–æ–≥–æ–¥–∞
import time #–í—Ä–µ–º—è
from telebot import types
from pyowm.exceptions import api_response_error
import apiai, json


weather_token='f0d533caf440f9d7604e8da15f7abc76'

tele_token="809144623:AAFx-7iltSMXrNwNbgIQcqxTsT4WWVtTZPs"
start = 0

bot = telebot.TeleBot(tele_token)#TELEGRAM BOT TOKEN

owm = pyowm.OWM(weather_token, language= "ru")#WEATER



@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id,"""–ü—Ä–∏–≤–µ—Ç üòé
    -----–≠—Ç–æ –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π –ë–û–¢ –ø–æ–≥–æ–¥—ã----- 
    –ï—Å–ª–∏ —Ç–µ–±–µ —Å–∫—É—á–Ω–æ—é—é
    –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ.....üôÉ
    """)
    time.sleep(2)
    bot.send_message(message.chat.id, "–ò –∫—Å—Ç–∞—Ç–∏ —è –∑–Ω–∞—é –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç"+"\n"+message.from_user.first_name+", –Ω–µ —Ç–∞–∫ –ª–∏?"+"\n"+"–í–ø—Ä–æ—á–µ–º –∫–µ–º –±—ã —Ç—ã –Ω–µ –±—ã–ª, —Ç—ã –∫—Ä–∞—Å–∞–≤—á–∏–∫!ü§ó")
@bot.message_handler(commands=['help'])
def help_me(message):
    bot.send_message(message.chat.id,"""–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:
    /start - –ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    /weather - –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É
    /stop - –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—â–µ–Ω–∏–µ
    """)
@bot.message_handler(commands=['weather'])
def weather_start(message):
    bot.send_message(message.chat.id,"–ü–æ–≥–æ–¥–∞ —Ç–∞–∫ –ø–æ–≥–æ–¥–∞, –∫–∞–∫–æ–π –≥–æ—Ä–æ–¥ –≤–∞–º –Ω—É–∂–µ–Ω?")
    bot.send_message(message.chat.id,"–ß—Ç–æ –±—ã –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—Ç—å –æ–±—â–µ–Ω–∏–µ, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É - !stop")
    global start
    start=1

@bot.message_handler(commands=['stop'])
def weather_stop(message):
    bot.send_message(message.chat.id,"–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—â–µ–Ω–∏–µ)")
    global start
    start=0



@bot.message_handler(content_types=["text"])
def dialog(message):
    if start == 1:
        chat_id = message.chat.id
        try:
            place = message.text
            main = owm.weather_at_place(place)
            global weather
            weather = main.get_weather()#–î–û–°–¢–ê–ï–ú –û–¢ –°–Æ–î–ê –í–°–Æ –ò–ù–§–£, –∞ —Ç–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç  –ø—Ä–æ—Å—Ç –∫–∞–∫ –∫–æ–¥!
            bot.send_message(chat_id, "–ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–Ω–∞—Ç—å?", reply_markup=keyboard())
        except(api_response_error.NotFoundError):
            if message.text == "–ú–∞–∫—Å.–¢–µ–º–ø" or message.text == "–°—Ä–µ–¥–Ω—è—è –¢–µ–º–ø" or message.text == "–ú–∏–Ω.–¢–µ–º–ø" or message.text == "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞" or message.text == "–î–µ—Ç–∞–ª –ò–Ω—Ñ." or message.text == "–í–ª–∞–∂–Ω–æ—Å—Ç—å":
                maxtemp = weather.get_temperature("celsius")["temp_max"]#–≤—ã–±–æ—Ä –µ–¥–µ–Ω–∏—Ü–∏ –∏—Å—á–µ—Å–ª–µ–Ω–∏—è, –∏ —Ñ—É–Ω–∫—Ü–∏
                midtemp =  weather.get_temperature("celsius")["temp"]#–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø
                mintemp = weather.get_temperature("celsius")["temp_min"]#–º–∏–Ω —Ç–µ–º–ø 
                speedwind = weather.get_wind()["speed"]#–í–µ—Ç–µ—Ä
                status = weather.get_detailed_status()#–°—Ç–∞—Å—Ç—É—Å - –¥–µ—Ç–∞–ª—å–Ω—ã–π
                vlag = weather.get_humidity()#—Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–Ω—Ñ—É –æ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏

                if message.text == "–ú–∞–∫—Å.–¢–µ–º–ø":
                    bot.send_message(chat_id,"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ —Ä–∞–π–æ–Ω–µ - ({:.0f}".format(maxtemp)+"¬∞C)", reply_markup=keyboard())
                elif message.text == "–°—Ä–µ–¥–Ω—è—è –¢–µ–º–ø":
                    bot.send_message(chat_id,"–°—Ä–µ–¥–Ω—è—è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ —Ä–∞–π–æ–Ω–µ - ({:.0f}".format(midtemp)+"¬∞C)", reply_markup=keyboard())
                elif message.text == "–ú–∏–Ω.–¢–µ–º–ø":
                    bot.send_message(chat_id,"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ —Ä–∞–π–æ–Ω–µ - ({:.0f}".format(mintemp)+"¬∞C)", reply_markup=keyboard())
                elif message.text == "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞":
                    bot.send_message(chat_id,"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ - {:.0f}".format(speedwind)+"–º/—Å", reply_markup=keyboard())
                elif message.text == "–î–µ—Ç–∞–ª –ò–Ω—Ñ.":
                    bot.send_message(chat_id,"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç - "+status, reply_markup=keyboard())
                elif message.text == "–í–ª–∞–∂–Ω–æ—Å—Ç—å":
                    bot.send_message(chat_id,"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤–ª–∞–∂–Ω–æ—Å—Ç—å —Å–æ—Å—Ç–æ–≤–ª—è–µ—Ç - {:.0f}".format(vlag)+"%", reply_markup=keyboard())
            else:
                bot.send_message(chat_id,"–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É —Å–Ω–æ–≤–∞")
    else:
        request = apiai.ApiAI('30113feb0e2c4c9cbc5fe10f8c6148bd').text_request() # –¢–æ–∫–µ–Ω API –∫ Dialogflow
        request.lang = 'ru' # –ù–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ –±—É–¥–µ—Ç –ø–æ—Å–ª–∞–Ω –∑–∞–ø—Ä–æ—Å
        request.query = message.text # –ü–æ—Å—ã–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ –ò–ò —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ—Ç —é–∑–µ—Ä–∞
        request.session_id = 'BatlabAIBot' # ID –°–µ—Å—Å–∏–∏ –¥–∏–∞–ª–æ–≥–∞ (–Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º —É—á–∏—Ç—å –±–æ—Ç–∞)
        responseJson = json.loads(request.getresponse().read().decode('utf-8'))
        response = responseJson['result']['fulfillment']['speech'] # –†–∞–∑–±–∏—Ä–∞–µ–º JSON –∏ –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –æ—Ç–≤–µ
        if response:
            bot.reply_to(message, response)
        else:
            bot.send_message(message.chat.id,'–Ø –í–∞—Å –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ªa!')

    
def keyboard():

    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True) 
    knop1,knop2,knop3,knop4,knop5,knop6=types.KeyboardButton("–ú–∞–∫—Å.–¢–µ–º–ø"),types.KeyboardButton("–°—Ä–µ–¥–Ω—è—è –¢–µ–º–ø"),types.KeyboardButton("–ú–∏–Ω.–¢–µ–º–ø"),types.KeyboardButton("–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞"),types.KeyboardButton("–î–µ—Ç–∞–ª –ò–Ω—Ñ."),types.KeyboardButton("–í–ª–∞–∂–Ω–æ—Å—Ç—å")   
    markup.add(knop1,knop2,knop3)
    markup.add(knop4,knop5,knop6)
    return markup
    
while True:
    try:
        bot.polling()
    except Exception:
        time.sleep(20)